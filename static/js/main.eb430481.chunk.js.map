{"version":3,"sources":["components/Navbar.jsx","utils/api.js","components/ErrorDialog.jsx","components/CommonPropTypes.jsx","components/PairDetails.jsx","components/Pair.jsx","components/Pairs.jsx","components/Title.jsx","components/Portfolio.jsx","components/PortfolioController.jsx","components/Home.jsx","components/Container.jsx","components/Nav.jsx","components/Content.jsx","components/Footer.jsx","components/ContentWrapper.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Navbar","className","id","href","process","icon","Button","variant","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","type","aria-label","getPortfolioUrl","address","ErrorDialog","detail","onClose","useState","show","setShow","Modal","onHide","animation","Header","closeButton","Title","Body","defaultProps","TokenPropTypes","symbol","PropTypes","string","isRequired","balance","number","TransactionPropTypes","amount0","amount1","amountUSD","liquidity","sender","to","arrayOf","shape","Dialog","title","children","Footer","onClick","OverviewTokenDetail","token","price","balance_usd","OverviewTab","pairDict","tokens","map","key","TransactionsTab","transactions","JSON","stringify","DebugTab","PairDetailsTabs","Tabs","defaultActiveKey","transition","Tab","eventKey","PairDetails","pair_symbol","EtherscanTokenLink","text","tokenAddress","ownerAddress","holderSuffix","url","PairDetailsLink","Pair","showDetails","setShowDetails","token0","token1","contract_address","owner_balance","toFixed","token_price","share","Pairs","pairsComponents","pairs","Table","extraComponent","Download","size","DoughnutChart","dataDict","datasetsData","Math","round","data","labels","datasets","label","options","plugins","colorschemes","scheme","DebugResponse","Accordion","Card","Toggle","as","Collapse","Portfolio","Row","Col","xs","PortfolioController","useParams","setDataDict","errorDetail","setErrorDetail","onOk","errorDialog","portfolio","spinner","Spinner","useEffect","onNotOk","fetch","then","response","callback","ok","json","error","toString","fetchPortfolio","Home","Container","fluid","exact","path","random","timestamp","Date","AddressForm","onAddress","loading","setAddress","onSubmit","e","preventDefault","placeholder","aria-describedby","onChange","target","value","pulse","Nav","NavDropdown","Item","Divider","Content","history","useHistory","redirect","newAddress","push","goBack","version","ContentWrapper","library","add","fas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.eb430481.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Navbar = () => (\n  <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href={`${process.env.PUBLIC_URL}/`}>\n      <div className=\"sidebar-brand-icon rotate-n-15\">\n        <i className=\"fas fa-laugh-wink\" />\n      </div>\n      <div className=\"sidebar-brand-text mx-3\">\n        Pools\n      </div>\n    </a>\n\n    <hr className=\"sidebar-divider my-0\" />\n\n    <li className=\"nav-item active\">\n      <a className=\"nav-link\" href=\"index.html\">\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"tachometer-alt\" />\n        <span>Dashboard</span>\n      </a>\n    </li>\n\n    <hr className=\"sidebar-divider\" />\n\n    <div className=\"sidebar-heading\">\n      Interface\n    </div>\n\n    <li className=\"nav-item\">\n      <Button variant=\"link\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n        <FontAwesomeIcon className=\"fa-cog mr-1\" icon=\"tachometer-alt\" />\n        <span>Components</span>\n      </Button>\n      <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          <h6 className=\"collapse-header\">Custom Components:</h6>\n          <a className=\"collapse-item\" href=\"buttons.html\">Buttons</a>\n          <a className=\"collapse-item\" href=\"cards.html\">Cards</a>\n        </div>\n      </div>\n    </li>\n\n    <li className=\"nav-item\">\n      <Button variant=\"link\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"wrench\" />\n        <span>Utilities</span>\n      </Button>\n      <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          <h6 className=\"collapse-header\">Custom Utilities:</h6>\n          <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\n          <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\n          <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\n          <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\n        </div>\n      </div>\n    </li>\n\n    <hr className=\"sidebar-divider\" />\n\n    <div className=\"sidebar-heading\">\n      Addons\n    </div>\n\n    <li className=\"nav-item\">\n      <Button variant=\"link\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\">\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"folder\" />\n        <span>Pages</span>\n      </Button>\n      <div id=\"collapsePages\" className=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          <h6 className=\"collapse-header\">Login Screens:</h6>\n          <a className=\"collapse-item\" href=\"login.html\">Login</a>\n          <a className=\"collapse-item\" href=\"register.html\">Register</a>\n          <a className=\"collapse-item\" href=\"forgot-password.html\">Forgot Password</a>\n          <div className=\"collapse-divider\" />\n          <h6 className=\"collapse-header\">Other Pages:</h6>\n          <a className=\"collapse-item\" href=\"404.html\">404 Page</a>\n          <a className=\"collapse-item\" href=\"blank.html\">Blank Page</a>\n        </div>\n      </div>\n    </li>\n\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"charts.html\">\n        <i className=\"fas fa-fw fa-chart-area\" />\n        <span>Charts</span>\n      </a>\n    </li>\n\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"tables.html\">\n        <i className=\"fas fa-fw fa-table\" />\n        <span>Tables</span>\n      </a>\n    </li>\n\n    <hr className=\"sidebar-divider d-none d-md-block\" />\n\n    <div className=\"text-center d-none d-md-inline\">\n      <button className=\"rounded-circle border-0\" id=\"sidebarToggle\" type=\"button\" aria-label=\"Toggle sidebar\" />\n    </div>\n\n  </ul>\n);\n\nexport default Navbar;\n","const apiURL = 'https://pools-api.herokuapp.com/portfolio/';\n\nconst getPortfolioUrl = (address) => (\n  apiURL + address\n);\n\nconst fetchPortfolio = (address, onOk, onNotOk) => {\n  const url = getPortfolioUrl(address);\n  fetch(url)\n    .then((response) => {\n      const callback = response.ok ? onOk : onNotOk;\n      response.json().then((data) => callback(data));\n    },\n    // e.g. on unhandled backend 500 exception, the cors header is not passed\n    // hence the frontend can't even fetch the response, error would be:\n    // TypeError: Failed to fetch\n    // TODO: we may want to cross log that to Sentry\n    (error) => onNotOk({ detail: error.toString() }));\n};\n\nexport { getPortfolioUrl, fetchPortfolio };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'react-bootstrap';\n\nconst ErrorDialog = ({ detail, onClose }) => {\n  const [show, setShow] = useState(true);\n  const handleClose = () => {\n    setShow(false);\n    onClose();\n  };\n\n  // note animation is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  return (\n    <Modal show={show} onHide={handleClose} animation={false}>\n      <Modal.Header closeButton className=\"bg-warning\">\n        <Modal.Title>Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{detail}</Modal.Body>\n    </Modal>\n  );\n};\nErrorDialog.propTypes = {\n  detail: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n};\nErrorDialog.defaultProps = {\n  onClose: () => null,\n};\n\nexport default ErrorDialog;\n","import PropTypes from 'prop-types';\n\nconst TokenPropTypes = {\n  symbol: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nconst TransactionPropTypes = {\n  amount0: PropTypes.number.isRequired,\n  amount1: PropTypes.number.isRequired,\n  amountUSD: PropTypes.number.isRequired,\n  liquidity: PropTypes.number.isRequired,\n  sender: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nconst PairDictPropTypes = {\n  contract_address: PropTypes.string.isRequired,\n  owner_balance: PropTypes.number.isRequired,\n  pair_symbol: PropTypes.string.isRequired,\n  share: PropTypes.number.isRequired,\n  balance_usd: PropTypes.number.isRequired,\n  tokens: PropTypes.arrayOf(PropTypes.shape(TokenPropTypes).isRequired).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape(TransactionPropTypes).isRequired).isRequired,\n};\n\nexport { PairDictPropTypes, TokenPropTypes, TransactionPropTypes };\n","import React from 'react';\nimport {\n  Button, Modal, Tab, Tabs,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PairDictPropTypes, TokenPropTypes, TransactionPropTypes } from './CommonPropTypes';\n\nconst Dialog = ({\n  title, children, show, onHide,\n}) => (\n  // note animation is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  <Modal show={show} onHide={onHide} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {children}\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onHide}>\n        Close\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nconst OverviewTokenDetail = ({ token }) => (\n  <>\n    {token.symbol}\n    <ul>\n      <li>\n        Balance:\n        {token.balance}\n      </li>\n      <li>\n        Price:\n        {token.price}\n      </li>\n      <li>\n        Total USD: $\n        {token.balance_usd}\n      </li>\n    </ul>\n  </>\n);\nOverviewTokenDetail.propTypes = PropTypes.shape(TokenPropTypes).isRequired;\n\nconst OverviewTab = ({ pairDict }) => (\n  <>\n    {pairDict.tokens.map((token) => <OverviewTokenDetail token={token} key={token.symbol} />)}\n  </>\n);\nOverviewTab.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst TransactionsTab = ({ transactions }) => (\n  <pre>\n    {JSON.stringify(transactions, null, 2)}\n  </pre>\n);\nTransactionsTab.propTypes = PropTypes.shape(TransactionPropTypes).isRequired;\n\nconst DebugTab = ({ pairDict }) => (\n  <pre>\n    {JSON.stringify(pairDict, null, 2)}\n  </pre>\n);\nDebugTab.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst PairDetailsTabs = ({ pairDict }) => (\n  // note transition is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  <Tabs defaultActiveKey=\"overview\" transition={false}>\n    <Tab eventKey=\"overview\" title=\"Overview\">\n      <OverviewTab pairDict={pairDict} />\n    </Tab>\n    <Tab eventKey=\"transactions\" title=\"Transactions\">\n      <TransactionsTab transactions={pairDict.transactions} />\n    </Tab>\n    <Tab eventKey=\"debug\" title=\"Debug\">\n      <DebugTab pairDict={pairDict} />\n    </Tab>\n  </Tabs>\n);\nPairDetailsTabs.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst PairDetails = ({ pairDict, show, onHide }) => {\n  const title = `${pairDict.pair_symbol} pair details`;\n  return (\n    <Dialog title={title} show={show} onHide={onHide}>\n      <PairDetailsTabs pairDict={pairDict} />\n    </Dialog>\n  );\n};\nPairDetails.propTypes = {\n  pairDict: PropTypes.shape(PairDictPropTypes).isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default PairDetails;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PairDictPropTypes } from './CommonPropTypes';\nimport PairDetails from './PairDetails';\n\nconst EtherscanTokenLink = ({ text, tokenAddress, ownerAddress }) => {\n  const holderSuffix = ownerAddress ? `?a=${ownerAddress}` : '';\n  const url = `https://etherscan.io/token/${tokenAddress}${holderSuffix}`;\n  return (\n    <a href={url}>{ text }</a>\n  );\n};\nEtherscanTokenLink.propTypes = {\n  text: PropTypes.string.isRequired,\n  tokenAddress: PropTypes.string.isRequired,\n  ownerAddress: PropTypes.string,\n};\nEtherscanTokenLink.defaultProps = {\n  ownerAddress: null,\n};\n\nconst PairDetailsLink = ({ onClick }) => (\n  <Button type=\"link\" onClick={onClick}>Details</Button>\n);\nPairDetailsLink.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nconst Pair = ({ address, pairDict }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const token0 = pairDict.tokens[0];\n  const token1 = pairDict.tokens[1];\n  const decimalPlace = 2;\n  return (\n    <tr>\n      <td>\n        <EtherscanTokenLink text={pairDict.pair_symbol} tokenAddress={pairDict.contract_address} />\n      </td>\n      <td>\n        <EtherscanTokenLink\n          text={pairDict.owner_balance.toFixed(decimalPlace)}\n          tokenAddress={pairDict.contract_address}\n          ownerAddress={address}\n        />\n      </td>\n      <td>\n        $\n        { pairDict.token_price.toFixed(decimalPlace) }\n      </td>\n      <td>\n        { pairDict.share.toFixed(decimalPlace) }\n        %\n      </td>\n      <td>\n        { token0.balance.toFixed(decimalPlace) }\n        {' '}\n        { token0.symbol }\n        {' '}\n        +\n        {' '}\n        { token1.balance.toFixed(decimalPlace) }\n        {' '}\n        +\n        {' '}\n        { token1.symbol }\n      </td>\n      <td>\n        $\n        { pairDict.balance_usd.toFixed(decimalPlace) }\n      </td>\n      <td>\n        <PairDetails pairDict={pairDict} show={showDetails} onHide={() => setShowDetails(false)} />\n        <PairDetailsLink onClick={() => setShowDetails(true)} />\n      </td>\n    </tr>\n  );\n};\nPair.propTypes = {\n  address: PropTypes.string.isRequired,\n  pairDict: PropTypes.shape(PairDictPropTypes).isRequired,\n};\n\nexport default Pair;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport Pair from './Pair';\n\nconst Pairs = ({ address, pairs }) => {\n  const pairsComponents = pairs.map(\n    (pairDict) => <Pair address={address} pairDict={pairDict} key={pairDict.contract_address} />,\n  );\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>Pool token balance</th>\n          <th>Price</th>\n          <th>Share</th>\n          <th>Tokens balance</th>\n          <th>Balance USD</th>\n          <th>Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        { pairsComponents }\n      </tbody>\n    </Table>\n  );\n};\nPairs.propTypes = {\n  address: PropTypes.string.isRequired,\n  pairs: PropTypes.arrayOf(Pair.propTypes.pairDict).isRequired,\n};\n\nexport default Pairs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title, extraComponent }) => (\n  <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 className=\"h3 mb-0 text-gray-800\">{title}</h1>\n    {extraComponent}\n  </div>\n);\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  extraComponent: PropTypes.elementType,\n};\nTitle.defaultProps = {\n  extraComponent: null,\n};\n\nexport default Title;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport 'chartjs-plugin-colorschemes/dist/chartjs-plugin-colorschemes.min';\nimport {\n  Accordion, Button, Card, Col, Row,\n} from 'react-bootstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport Pairs from './Pairs';\nimport Title from './Title';\nimport { getPortfolioUrl } from '../utils/api';\n\nconst PortfolioPropTypes = {\n  dataDict: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    balance_usd: PropTypes.number.isRequired,\n    pairs: Pairs.isRequired,\n  }).isRequired,\n};\n\nconst Download = ({ address }) => (\n  <Button variant=\"primary\" size=\"sm\" href={getPortfolioUrl(address)}>\n    <FontAwesomeIcon icon=\"download\" />\n    {' '}\n    Download\n  </Button>\n);\nDownload.propTypes = {\n  address: PropTypes.string.isRequired,\n};\n\nconst DoughnutChart = ({ dataDict }) => {\n  const balance = dataDict.balance_usd;\n  const datasetsData = dataDict.pairs.map(\n    (pairDict) => Math.round(100 * pairDict.balance_usd / balance),\n  );\n  const labels = dataDict.pairs.map(\n    (pairDict) => pairDict.pair_symbol,\n  );\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Portfolio share',\n      data: datasetsData,\n    }],\n  };\n  const options = {\n    plugins: {\n      colorschemes: {\n        scheme: 'brewer.SetOne9',\n      },\n    },\n  };\n  return <Doughnut data={data} options={options} />;\n};\nDoughnutChart.propTypes = PortfolioPropTypes;\n\nconst DebugResponse = ({ dataDict }) => (\n  <Accordion>\n    <Card>\n      <Card.Header>\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n          See full JSON response\n        </Accordion.Toggle>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"0\" animation=\"false\">\n        <Card.Body>\n          <pre>\n            {JSON.stringify(dataDict, null, 2)}\n          </pre>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n);\nDebugResponse.propTypes = PortfolioPropTypes;\n\nconst Portfolio = ({ dataDict }) => (\n  <>\n    <Title title=\"Portfolio\" extraComponent={<Download address={dataDict.address} />} />\n    <Row>\n      <h3>\n        Liquidity provider balance: $\n        { dataDict.balance_usd.toFixed(2) }\n      </h3>\n    </Row>\n    <Row>\n      <Col xs={7}>\n        <DoughnutChart dataDict={dataDict} />\n      </Col>\n    </Row>\n    <Row>\n      <Pairs address={dataDict.address} pairs={dataDict.pairs} />\n    </Row>\n    <Row>\n      <DebugResponse dataDict={dataDict} />\n    </Row>\n  </>\n);\nPortfolio.propTypes = PortfolioPropTypes;\n\nexport default Portfolio;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport { fetchPortfolio } from '../utils/api';\nimport ErrorDialog from './ErrorDialog';\nimport Portfolio from './Portfolio';\n\nconst PortfolioController = () => {\n  const { address } = useParams();\n  const [dataDict, setDataDict] = useState(null);\n  const [errorDetail, setErrorDetail] = useState(null);\n  const onOk = (data) => {\n    setErrorDetail(null);\n    setDataDict(data);\n  };\n  const errorDialog = errorDetail ? (\n    <ErrorDialog\n      detail={errorDetail.detail}\n    />\n  ) : null;\n  const portfolio = dataDict ? <Portfolio dataDict={dataDict} /> : null;\n  const spinner = !(dataDict || errorDetail) ? <Spinner animation=\"border\" /> : null;\n  useEffect(() => {\n    setErrorDetail(null);\n    setDataDict(null);\n    fetchPortfolio(address, onOk, setErrorDetail);\n  }, [address]);\n  return (\n    <>\n      {errorDialog}\n      {spinner}\n      {portfolio}\n    </>\n  );\n};\n\nexport default PortfolioController;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Title from './Title';\n\nconst Home = () => (\n  <>\n    <Title title=\"Home\" />\n    <div className=\"row\">\n      <p>\n        Enter your address to track your portfolio, e.g.\n        {' '}\n        <Link to=\"/portfolio/0x000000000000000000000000000000000000dEaD\">burn address portfolio</Link>\n      </p>\n    </div>\n  </>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Container as ReactContainer } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\nimport PortfolioController from './PortfolioController';\nimport Home from './Home';\n\nconst Container = () => (\n  <ReactContainer fluid>\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/portfolio/:address\" key={Math.random()}>\n        <PortfolioController timestamp={new Date().toString()} />\n      </Route>\n    </Switch>\n  </ReactContainer>\n);\n\nexport default Container;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavDropdown } from 'react-bootstrap';\n\nconst AddressForm = ({ onAddress, loading }) => {\n  const [address, setAddress] = useState();\n  const icon = loading ? 'spinner' : 'search';\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onAddress(address);\n  };\n\n  return (\n    <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\" onSubmit={onSubmit}>\n      <div className=\"input-group\">\n        <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Ethereum address\" aria-label=\"Address\" aria-describedby=\"basic-addon2\" onChange={(e) => { setAddress(e.target.value); }} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={onSubmit}>\n            <FontAwesomeIcon className=\"fa-sm\" icon={icon} pulse={loading} />\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\nAddressForm.propTypes = {\n  onAddress: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n};\nAddressForm.defaultProps = {\n  loading: false,\n};\n\nconst Nav = ({ onAddress, loading }) => (\n  <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n    <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\" type=\"button\">\n      <i className=\"fa fa-bars\" />\n    </button>\n\n    <AddressForm onAddress={onAddress} loading={loading} />\n\n    <ul className=\"navbar-nav ml-auto\">\n\n      <div className=\"topbar-divider d-none d-sm-block\" />\n\n      <NavDropdown title=\"0x00000...0000\" id=\"nav-dropdown\" className=\"mr-2 d-none d-lg-inline small\">\n        <NavDropdown.Item>Profile</NavDropdown.Item>\n        <NavDropdown.Item>Settings</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item>Logout</NavDropdown.Item>\n      </NavDropdown>\n\n    </ul>\n\n  </nav>\n);\nNav.propTypes = AddressForm.propTypes;\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\n\nimport Container from './Container';\nimport Nav from './Nav';\n\nconst Content = () => {\n  const [address, setAddress] = useState(null);\n  const history = useHistory();\n  /*\n   * Forces the components to be re-rendered even though the route didn't change.\n   * https://stackoverflow.com/q/47602091/185510\n   */\n  const forceReload = () => {\n    history.push('/temp');\n    history.goBack();\n  };\n  const onAddress = (newAddress) => {\n    (address === newAddress) && forceReload();\n    setAddress(newAddress);\n  };\n  const redirect = address ? <Redirect to={`/portfolio/${address}`} /> : null;\n  return (\n    <div id=\"content\">\n      {redirect}\n      <Nav onAddress={onAddress} />\n      <Container />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport { version } from '../../package.json';\n\nconst Footer = () => (\n  <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>\n          Copyright © Andre Miras 2020 - Pools v\n          {version}\n        </span>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst ContentWrapper = () => (\n  <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n    <Content />\n    <Footer />\n  </div>\n);\n\nexport default ContentWrapper;\n","import React from 'react';\nimport './App.css';\nimport 'startbootstrap-sb-admin-2/css/sb-admin-2.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport ContentWrapper from './components/ContentWrapper';\n\nlibrary.add(fas);\n\nconst App = () => (\n  <Router>\n    <div className=\"App\" id=\"wrapper\">\n      <Navbar />\n      <ContentWrapper />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}