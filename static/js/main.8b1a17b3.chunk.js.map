{"version":3,"sources":["CHANGELOG.md","components/Navbar.jsx","utils/api.js","components/ErrorDialog.jsx","components/CommonPropTypes.jsx","components/PairDetails.jsx","components/Pair.jsx","components/Pairs.jsx","components/Title.jsx","components/Portfolio.jsx","components/PortfolioController.jsx","components/Pool.jsx","components/PoolController.jsx","components/Changelog.jsx","components/Home.jsx","components/Container.jsx","components/Nav.jsx","components/Content.jsx","components/Footer.jsx","components/ContentWrapper.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","CollapsedNavItem","innerButton","children","useState","show","setShow","divClass","buttonClass","Button","variant","className","data-toggle","aria-expanded","onClick","SourceCodeNavItem","icon","href","Navbar","id","process","data-target","aria-controls","aria-labelledby","data-parent","to","type","aria-label","apiRootURL","portfolioUrl","address","fetchFromAPI","url","onOk","onNotOk","fetch","then","response","callback","ok","json","data","error","detail","toString","fetchPairsDaily","pairsDailyUrl","ErrorDialog","onClose","Modal","onHide","animation","Header","closeButton","Title","Body","defaultProps","TokenPropTypes","symbol","PropTypes","string","isRequired","balance","number","TransactionPropTypes","amount0","amount1","amountUSD","liquidity","sender","arrayOf","shape","Dialog","title","Footer","OverviewTokenDetail","token","price","balance_usd","OverviewTab","pairDict","tokens","map","key","TransactionsTab","transactions","JSON","stringify","DebugTab","PairDetailsTabs","Tabs","defaultActiveKey","transition","Tab","eventKey","PairDetails","pair_symbol","EtherscanTokenLink","text","tokenAddress","ownerAddress","holderSuffix","PairDetailsLink","Pair","showDetails","setShowDetails","token0","token1","contract_address","owner_balance","toFixed","token_price","share","Pairs","pairsComponents","pairs","Table","extraComponent","Download","size","DoughnutChart","dataDict","datasetsData","Math","round","labels","datasets","label","options","plugins","colorschemes","scheme","DebugResponse","Accordion","Card","Toggle","as","Collapse","Portfolio","Row","Col","xs","PortfolioController","useParams","setDataDict","errorDetail","setErrorDetail","errorDialog","portfolio","spinner","Spinner","useEffect","fetchPortfolio","LineChart","sortedPairDailyList","pairDailyList","sort","a","b","Date","date","pairDaily","price_usd","Pool","PoolController","setTokenDailyList","pool","Changelog","markdown","setMarkdown","changelogPath","source","Home","Container","fluid","exact","path","AddressForm","onAddress","loading","setAddress","onSubmit","e","preventDefault","placeholder","aria-describedby","onChange","target","value","pulse","Nav","NavDropdown","Item","Divider","Content","history","useHistory","redirect","newAddress","push","goBack","version","ContentWrapper","library","add","fas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8b1a17b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CHANGELOG.65ba8a3b.md\";","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CollapsedNavItem = ({ innerButton, children }) => {\n  const [show, setShow] = useState(false);\n  const toggleShow = () => setShow(!show);\n  const divClass = show ? 'show' : '';\n  const buttonClass = show ? '' : 'collapsed';\n\n  return (\n    <>\n      <Button\n        variant=\"link\"\n        className={`nav-link ${buttonClass}`}\n        data-toggle=\"collapse\"\n        aria-expanded={show}\n        onClick={() => toggleShow()}\n      >\n        {innerButton}\n      </Button>\n      <div className={`collapse ${divClass}`}>\n        {children}\n      </div>\n    </>\n  );\n};\nCollapsedNavItem.propTypes = {\n  innerButton: PropTypes.element.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nconst SourceCodeNavItem = () => {\n  const innerButton = (\n    <>\n      <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"code\" />\n      {' '}\n      <span>Source code</span>\n    </>\n  );\n  const children = (\n    <div className=\"bg-white py-2 collapse-inner rounded\">\n      <h6 className=\"collapse-header\">Frontend:</h6>\n      <a className=\"collapse-item\" href=\"https://github.com/AndreMiras/pools\">AndreMiras/pools</a>\n      <div className=\"collapse-divider\" />\n      <h6 className=\"collapse-header\">Backend:</h6>\n      <a className=\"collapse-item\" href=\"https://github.com/AndreMiras/pools-api\">AndreMiras/pools-api</a>\n      <a className=\"collapse-item\" href=\"https://github.com/AndreMiras/libpools\">AndreMiras/libpools</a>\n    </div>\n  );\n  return (\n    <CollapsedNavItem innerButton={innerButton}>\n      {children}\n    </CollapsedNavItem>\n  );\n};\n\nconst Navbar = () => (\n  <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href={process.env.PUBLIC_URL}>\n      <div className=\"sidebar-brand-icon rotate-n-15\">\n        <i className=\"fas fa-laugh-wink\" />\n      </div>\n      <div className=\"sidebar-brand-text mx-3\">\n        Pools\n      </div>\n    </a>\n\n    <hr className=\"sidebar-divider my-0\" />\n\n    <li className=\"nav-item active\">\n      <a className=\"nav-link\" href={process.env.PUBLIC_URL}>\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"tachometer-alt\" />\n        <span>Dashboard</span>\n      </a>\n    </li>\n\n    <hr className=\"sidebar-divider\" />\n\n    <div className=\"sidebar-heading\">\n      Interface\n    </div>\n\n    <li className=\"nav-item\">\n      <Button variant=\"link\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n        <FontAwesomeIcon className=\"fa-cog mr-1\" icon=\"tachometer-alt\" />\n        <span>Components</span>\n      </Button>\n      <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          <h6 className=\"collapse-header\">Custom Components:</h6>\n          <a className=\"collapse-item\" href=\"buttons.html\">Buttons</a>\n          <a className=\"collapse-item\" href=\"cards.html\">Cards</a>\n        </div>\n      </div>\n    </li>\n\n    <li className=\"nav-item\">\n      <Button variant=\"link\" className=\"nav-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"wrench\" />\n        <span>Utilities</span>\n      </Button>\n      <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\n        <div className=\"bg-white py-2 collapse-inner rounded\">\n          <h6 className=\"collapse-header\">Custom Utilities:</h6>\n          <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\n          <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\n          <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\n          <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\n        </div>\n      </div>\n    </li>\n\n    <hr className=\"sidebar-divider\" />\n\n    <div className=\"sidebar-heading\">\n      Links\n    </div>\n\n    <li className=\"nav-item\">\n      <SourceCodeNavItem />\n    </li>\n\n    <li className=\"nav-item\">\n\n      <Link className=\"nav-link\" to=\"/changelog\">\n        <FontAwesomeIcon className=\"fa-fw mr-1\" icon=\"list\" />\n        <span>Changelog</span>\n      </Link>\n    </li>\n\n    <li className=\"nav-item\">\n      <a className=\"nav-link\" href=\"tables.html\">\n        <i className=\"fas fa-fw fa-table\" />\n        <span>Tables</span>\n      </a>\n    </li>\n\n    <hr className=\"sidebar-divider d-none d-md-block\" />\n\n    <div className=\"text-center d-none d-md-inline\">\n      <button className=\"rounded-circle border-0\" id=\"sidebarToggle\" type=\"button\" aria-label=\"Toggle sidebar\" />\n    </div>\n\n  </ul>\n);\n\nexport default Navbar;\n","const apiRootURL = 'https://pools-api.herokuapp.com';\nconst portfolioUrl = (address) => (`${apiRootURL}/portfolio/${address}`);\nconst tokensDailyUrl = (address) => (`${apiRootURL}/tokens/${address}/daily`);\nconst pairsDailyUrl = (address) => (`${apiRootURL}/pairs/${address}/daily`);\n\nconst fetchFromAPI = (url, onOk, onNotOk) => {\n  fetch(url)\n    .then((response) => {\n      const callback = response.ok ? onOk : onNotOk;\n      response.json().then((data) => callback(data));\n    },\n    // e.g. on unhandled backend 500 exception, the cors header is not passed\n    // hence the frontend can't even fetch the response, error would be:\n    // TypeError: Failed to fetch\n    // TODO: we may want to cross log that to Sentry\n    (error) => onNotOk({ detail: error.toString() }));\n};\n\nconst fetchPortfolio = (address, onOk, onNotOk) => (\n  fetchFromAPI(portfolioUrl(address), onOk, onNotOk)\n);\n\nconst fetchTokensDaily = (address, onOk, onNotOk) => (\n  fetchFromAPI(tokensDailyUrl(address), onOk, onNotOk)\n);\n\nconst fetchPairsDaily = (address, onOk, onNotOk) => (\n  fetchFromAPI(pairsDailyUrl(address), onOk, onNotOk)\n);\n\nexport {\n  portfolioUrl, tokensDailyUrl, pairsDailyUrl, fetchPortfolio, fetchTokensDaily, fetchPairsDaily,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'react-bootstrap';\n\nconst ErrorDialog = ({ detail, onClose }) => {\n  const [show, setShow] = useState(true);\n  const handleClose = () => {\n    setShow(false);\n    onClose();\n  };\n\n  // note animation is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  return (\n    <Modal show={show} onHide={handleClose} animation={false}>\n      <Modal.Header closeButton className=\"bg-warning\">\n        <Modal.Title>Error</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{detail}</Modal.Body>\n    </Modal>\n  );\n};\nErrorDialog.propTypes = {\n  detail: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n};\nErrorDialog.defaultProps = {\n  onClose: () => null,\n};\n\nexport default ErrorDialog;\n","import PropTypes from 'prop-types';\n\nconst TokenPropTypes = {\n  symbol: PropTypes.string.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nconst TransactionPropTypes = {\n  amount0: PropTypes.number.isRequired,\n  amount1: PropTypes.number.isRequired,\n  amountUSD: PropTypes.number.isRequired,\n  liquidity: PropTypes.number.isRequired,\n  sender: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nconst PairDictPropTypes = {\n  contract_address: PropTypes.string.isRequired,\n  owner_balance: PropTypes.number.isRequired,\n  pair_symbol: PropTypes.string.isRequired,\n  share: PropTypes.number.isRequired,\n  balance_usd: PropTypes.number.isRequired,\n  tokens: PropTypes.arrayOf(PropTypes.shape(TokenPropTypes).isRequired).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.shape(TransactionPropTypes).isRequired).isRequired,\n};\n\nexport { PairDictPropTypes, TokenPropTypes, TransactionPropTypes };\n","import React from 'react';\nimport {\n  Button, Modal, Tab, Tabs,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PairDictPropTypes, TokenPropTypes, TransactionPropTypes } from './CommonPropTypes';\n\nconst Dialog = ({\n  title, children, show, onHide,\n}) => (\n  // note animation is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  <Modal show={show} onHide={onHide} animation={false}>\n    <Modal.Header closeButton>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {children}\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={onHide}>\n        Close\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\nDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nconst OverviewTokenDetail = ({ token }) => (\n  <>\n    {token.symbol}\n    <ul>\n      <li>\n        Balance:\n        {token.balance}\n      </li>\n      <li>\n        Price:\n        {token.price}\n      </li>\n      <li>\n        Total USD: $\n        {token.balance_usd}\n      </li>\n    </ul>\n  </>\n);\nOverviewTokenDetail.propTypes = PropTypes.shape(TokenPropTypes).isRequired;\n\nconst OverviewTab = ({ pairDict }) => (\n  <>\n    {pairDict.tokens.map((token) => <OverviewTokenDetail token={token} key={token.symbol} />)}\n  </>\n);\nOverviewTab.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst TransactionsTab = ({ transactions }) => (\n  <pre>\n    {JSON.stringify(transactions, null, 2)}\n  </pre>\n);\nTransactionsTab.propTypes = PropTypes.shape(TransactionPropTypes).isRequired;\n\nconst DebugTab = ({ pairDict }) => (\n  <pre>\n    {JSON.stringify(pairDict, null, 2)}\n  </pre>\n);\nDebugTab.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst PairDetailsTabs = ({ pairDict }) => (\n  // note transition is disabled to workaround an upstream issue:\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5075\n  <Tabs defaultActiveKey=\"overview\" transition={false}>\n    <Tab eventKey=\"overview\" title=\"Overview\">\n      <OverviewTab pairDict={pairDict} />\n    </Tab>\n    <Tab eventKey=\"transactions\" title=\"Transactions\">\n      <TransactionsTab transactions={pairDict.transactions} />\n    </Tab>\n    <Tab eventKey=\"debug\" title=\"Debug\">\n      <DebugTab pairDict={pairDict} />\n    </Tab>\n  </Tabs>\n);\nPairDetailsTabs.propTypes = PropTypes.shape(PairDictPropTypes).isRequired;\n\nconst PairDetails = ({ pairDict, show, onHide }) => {\n  const title = `${pairDict.pair_symbol} pair details`;\n  return (\n    <Dialog title={title} show={show} onHide={onHide}>\n      <PairDetailsTabs pairDict={pairDict} />\n    </Dialog>\n  );\n};\nPairDetails.propTypes = {\n  pairDict: PropTypes.shape(PairDictPropTypes).isRequired,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n};\n\nexport default PairDetails;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PairDictPropTypes } from './CommonPropTypes';\nimport PairDetails from './PairDetails';\n\nconst EtherscanTokenLink = ({ text, tokenAddress, ownerAddress }) => {\n  const holderSuffix = ownerAddress ? `?a=${ownerAddress}` : '';\n  const url = `https://etherscan.io/token/${tokenAddress}${holderSuffix}`;\n  return (\n    <a href={url}>{ text }</a>\n  );\n};\nEtherscanTokenLink.propTypes = {\n  text: PropTypes.string.isRequired,\n  tokenAddress: PropTypes.string.isRequired,\n  ownerAddress: PropTypes.string,\n};\nEtherscanTokenLink.defaultProps = {\n  ownerAddress: null,\n};\n\nconst PairDetailsLink = ({ onClick }) => (\n  <Button type=\"link\" onClick={onClick}>Details</Button>\n);\nPairDetailsLink.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nconst Pair = ({ address, pairDict }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const token0 = pairDict.tokens[0];\n  const token1 = pairDict.tokens[1];\n  const decimalPlace = 2;\n  return (\n    <tr>\n      <td>\n        <EtherscanTokenLink text={pairDict.pair_symbol} tokenAddress={pairDict.contract_address} />\n      </td>\n      <td>\n        <EtherscanTokenLink\n          text={pairDict.owner_balance.toFixed(decimalPlace)}\n          tokenAddress={pairDict.contract_address}\n          ownerAddress={address}\n        />\n      </td>\n      <td>\n        <Link to={`/pairs/${pairDict.contract_address}`}>\n          $\n          { pairDict.token_price.toFixed(decimalPlace) }\n        </Link>\n      </td>\n      <td>\n        { pairDict.share.toFixed(decimalPlace) }\n        %\n      </td>\n      <td>\n        { token0.balance.toFixed(decimalPlace) }\n        {' '}\n        { token0.symbol }\n        {' '}\n        +\n        {' '}\n        { token1.balance.toFixed(decimalPlace) }\n        {' '}\n        +\n        {' '}\n        { token1.symbol }\n      </td>\n      <td>\n        $\n        { pairDict.balance_usd.toFixed(decimalPlace) }\n      </td>\n      <td>\n        <PairDetails pairDict={pairDict} show={showDetails} onHide={() => setShowDetails(false)} />\n        <PairDetailsLink onClick={() => setShowDetails(true)} />\n      </td>\n    </tr>\n  );\n};\nPair.propTypes = {\n  address: PropTypes.string.isRequired,\n  pairDict: PropTypes.shape(PairDictPropTypes).isRequired,\n};\n\nexport default Pair;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport Pair from './Pair';\n\nconst Pairs = ({ address, pairs }) => {\n  const pairsComponents = pairs.map(\n    (pairDict) => <Pair address={address} pairDict={pairDict} key={pairDict.contract_address} />,\n  );\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>Pool token balance</th>\n          <th>Price</th>\n          <th>Share</th>\n          <th>Tokens balance</th>\n          <th>Balance USD</th>\n          <th>Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        { pairsComponents }\n      </tbody>\n    </Table>\n  );\n};\nPairs.propTypes = {\n  address: PropTypes.string.isRequired,\n  pairs: PropTypes.arrayOf(Pair.propTypes.pairDict).isRequired,\n};\n\nexport default Pairs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title, extraComponent }) => (\n  <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 className=\"h3 mb-0 text-gray-800\">{title}</h1>\n    {extraComponent}\n  </div>\n);\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  extraComponent: PropTypes.elementType,\n};\nTitle.defaultProps = {\n  extraComponent: null,\n};\n\nexport default Title;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport 'chartjs-plugin-colorschemes/dist/chartjs-plugin-colorschemes.min';\nimport {\n  Accordion, Button, Card, Col, Row,\n} from 'react-bootstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport Pairs from './Pairs';\nimport Title from './Title';\nimport { portfolioUrl } from '../utils/api';\n\nconst PortfolioPropTypes = {\n  dataDict: PropTypes.shape({\n    address: PropTypes.string.isRequired,\n    balance_usd: PropTypes.number.isRequired,\n    pairs: Pairs.isRequired,\n  }).isRequired,\n};\n\nconst Download = ({ address }) => (\n  <Button variant=\"primary\" size=\"sm\" href={portfolioUrl(address)}>\n    <FontAwesomeIcon icon=\"download\" />\n    {' '}\n    Download\n  </Button>\n);\nDownload.propTypes = {\n  address: PropTypes.string.isRequired,\n};\n\nconst DoughnutChart = ({ dataDict }) => {\n  const balance = dataDict.balance_usd;\n  const datasetsData = dataDict.pairs.map(\n    (pairDict) => Math.round(100 * pairDict.balance_usd / balance),\n  );\n  const labels = dataDict.pairs.map(\n    (pairDict) => pairDict.pair_symbol,\n  );\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Portfolio share',\n      data: datasetsData,\n    }],\n  };\n  const options = {\n    plugins: {\n      colorschemes: {\n        scheme: 'brewer.SetOne9',\n      },\n    },\n  };\n  return <Doughnut data={data} options={options} />;\n};\nDoughnutChart.propTypes = PortfolioPropTypes;\n\nconst DebugResponse = ({ dataDict }) => (\n  <Accordion>\n    <Card>\n      <Card.Header>\n        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n          See full JSON response\n        </Accordion.Toggle>\n      </Card.Header>\n      <Accordion.Collapse eventKey=\"0\" animation=\"false\">\n        <Card.Body>\n          <pre>\n            {JSON.stringify(dataDict, null, 2)}\n          </pre>\n        </Card.Body>\n      </Accordion.Collapse>\n    </Card>\n  </Accordion>\n);\nDebugResponse.propTypes = PortfolioPropTypes;\n\nconst Portfolio = ({ dataDict }) => (\n  <>\n    <Title title=\"Portfolio\" extraComponent={<Download address={dataDict.address} />} />\n    <Row>\n      <h3>\n        Liquidity provider balance: $\n        { dataDict.balance_usd.toFixed(2) }\n      </h3>\n    </Row>\n    <Row>\n      <Col xs={7}>\n        <DoughnutChart dataDict={dataDict} />\n      </Col>\n    </Row>\n    <Row>\n      <Pairs address={dataDict.address} pairs={dataDict.pairs} />\n    </Row>\n    <Row>\n      <DebugResponse dataDict={dataDict} />\n    </Row>\n  </>\n);\nPortfolio.propTypes = PortfolioPropTypes;\n\nexport default Portfolio;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport { fetchPortfolio } from '../utils/api';\nimport ErrorDialog from './ErrorDialog';\nimport Portfolio from './Portfolio';\n\nconst PortfolioController = () => {\n  const { address } = useParams();\n  const [dataDict, setDataDict] = useState(null);\n  const [errorDetail, setErrorDetail] = useState(null);\n  const onOk = (data) => {\n    setErrorDetail(null);\n    setDataDict(data);\n  };\n  const errorDialog = errorDetail ? (\n    <ErrorDialog\n      detail={errorDetail.detail}\n    />\n  ) : null;\n  const portfolio = dataDict ? <Portfolio dataDict={dataDict} /> : null;\n  const spinner = !(dataDict || errorDetail) ? <Spinner animation=\"border\" /> : null;\n  useEffect(() => {\n    setErrorDetail(null);\n    setDataDict(null);\n    fetchPortfolio(address, onOk, setErrorDetail);\n  }, [address]);\n  return (\n    <>\n      {errorDialog}\n      {spinner}\n      {portfolio}\n    </>\n  );\n};\n\nexport default PortfolioController;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport Title from './Title';\n\nconst TokenDaily = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  price_usd: PropTypes.number.isRequired,\n};\n\nconst PoolPropTypes = {\n  pairDailyList: PropTypes.arrayOf(TokenDaily).isRequired,\n};\n\nconst LineChart = ({ pairDailyList }) => {\n  const sortedPairDailyList = pairDailyList.sort(\n    (a, b) => new Date(a.date) - new Date(b.date),\n  );\n  const labels = sortedPairDailyList.map((pairDaily) => pairDaily.date);\n  const datasetsData = sortedPairDailyList.map((pairDaily) => pairDaily.price_usd);\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Price USD',\n      data: datasetsData,\n    }],\n  };\n  return <Line data={data} />;\n};\nLineChart.propTypes = PoolPropTypes;\n\nconst Pool = ({ pairDailyList }) => (\n  <>\n    <Title title=\"Pair\" />\n    <LineChart pairDailyList={pairDailyList} />\n  </>\n);\nPool.propTypes = PoolPropTypes;\n\nexport default Pool;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\nimport { fetchPairsDaily } from '../utils/api';\nimport ErrorDialog from './ErrorDialog';\nimport Pool from './Pool';\n\nconst PoolController = () => {\n  const { address } = useParams();\n  const [pairDailyList, setTokenDailyList] = useState(null);\n  const [errorDetail, setErrorDetail] = useState(null);\n  const onOk = (data) => {\n    setErrorDetail(null);\n    setTokenDailyList(data);\n  };\n  const errorDialog = errorDetail ? (\n    <ErrorDialog\n      detail={errorDetail.detail}\n    />\n  ) : null;\n  const pool = pairDailyList ? <Pool pairDailyList={pairDailyList} /> : null;\n  const spinner = !(pairDailyList || errorDetail) ? <Spinner animation=\"border\" /> : null;\n  useEffect(() => {\n    setErrorDetail(null);\n    setTokenDailyList(null);\n    fetchPairsDaily(address, onOk, setErrorDetail);\n  }, [address]);\n  return (\n    <>\n      {errorDialog}\n      {spinner}\n      {pool}\n    </>\n  );\n};\n\nexport default PoolController;\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport changelogPath from '../CHANGELOG.md';\n\nconst Changelog = () => {\n  const [markdown, setMarkdown] = useState();\n  fetch(changelogPath)\n    .then((response) => response.text())\n    .then(setMarkdown);\n  return <ReactMarkdown source={markdown} />;\n};\n\nexport default Changelog;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Title from './Title';\n\nconst Home = () => (\n  <>\n    <Title title=\"Home\" />\n    <div className=\"row\">\n      <p>\n        Enter your address to track your portfolio, e.g.\n        {' '}\n        <Link to=\"/portfolio/0x000000000000000000000000000000000000dEaD\">burn address portfolio</Link>\n      </p>\n    </div>\n  </>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Container as ReactContainer } from 'react-bootstrap';\nimport { Switch, Route } from 'react-router-dom';\nimport PortfolioController from './PortfolioController';\nimport PoolController from './PoolController';\nimport Changelog from './Changelog';\nimport Home from './Home';\n\nconst Container = () => (\n  <ReactContainer fluid>\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/portfolio/:address\">\n        <PortfolioController />\n      </Route>\n      <Route path=\"/pairs/:address\">\n        <PoolController />\n      </Route>\n      <Route path=\"/changelog\">\n        <Changelog />\n      </Route>\n    </Switch>\n  </ReactContainer>\n);\n\nexport default Container;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavDropdown } from 'react-bootstrap';\n\nconst AddressForm = ({ onAddress, loading }) => {\n  const [address, setAddress] = useState();\n  const icon = loading ? 'spinner' : 'search';\n  const onSubmit = (e) => {\n    e.preventDefault();\n    onAddress(address);\n  };\n\n  return (\n    <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\" onSubmit={onSubmit}>\n      <div className=\"input-group\">\n        <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Ethereum address\" aria-label=\"Address\" aria-describedby=\"basic-addon2\" onChange={(e) => { setAddress(e.target.value); }} />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\" type=\"submit\" onClick={onSubmit}>\n            <FontAwesomeIcon className=\"fa-sm\" icon={icon} pulse={loading} />\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\nAddressForm.propTypes = {\n  onAddress: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n};\nAddressForm.defaultProps = {\n  loading: false,\n};\n\nconst Nav = ({ onAddress, loading }) => (\n  <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\n    <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\" type=\"button\">\n      <i className=\"fa fa-bars\" />\n    </button>\n\n    <AddressForm onAddress={onAddress} loading={loading} />\n\n    <ul className=\"navbar-nav ml-auto\">\n\n      <div className=\"topbar-divider d-none d-sm-block\" />\n\n      <NavDropdown title=\"0x00000...0000\" id=\"nav-dropdown\" className=\"mr-2 d-none d-lg-inline small\">\n        <NavDropdown.Item>Profile</NavDropdown.Item>\n        <NavDropdown.Item>Settings</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item>Logout</NavDropdown.Item>\n      </NavDropdown>\n\n    </ul>\n\n  </nav>\n);\nNav.propTypes = AddressForm.propTypes;\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\n\nimport Container from './Container';\nimport Nav from './Nav';\n\nconst Content = () => {\n  const [address, setAddress] = useState(null);\n  const history = useHistory();\n  /*\n   * Forces the components to be re-rendered even though the route didn't change.\n   * https://stackoverflow.com/q/47602091/185510\n   */\n  const forceReload = () => {\n    history.push('/temp');\n    history.goBack();\n  };\n  const onAddress = (newAddress) => {\n    (address === newAddress) && forceReload();\n    setAddress(newAddress);\n  };\n  const redirect = address ? <Redirect to={`/portfolio/${address}`} /> : null;\n  return (\n    <div id=\"content\">\n      {redirect}\n      <Nav onAddress={onAddress} />\n      <Container />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from 'react';\nimport { version } from '../../package.json';\n\nconst Footer = () => (\n  <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>\n          Copyright © Andre Miras 2020 - Pools v\n          {version}\n        </span>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst ContentWrapper = () => (\n  <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n    <Content />\n    <Footer />\n  </div>\n);\n\nexport default ContentWrapper;\n","import React from 'react';\nimport './App.css';\nimport 'startbootstrap-sb-admin-2/css/sb-admin-2.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport ContentWrapper from './components/ContentWrapper';\n\nlibrary.add(fas);\n\nconst App = () => (\n  <Router>\n    <div className=\"App\" id=\"wrapper\">\n      <Navbar />\n      <ContentWrapper />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}